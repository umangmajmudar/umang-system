Subexpression	Matches

^				Matches beginning of line.
$				Matches end of line.
.				Matches any single character except newline. Using m option allows it to match newline as well.
[...]			Matches any single character in brackets.
[^...]			Matches any single character not in brackets
\A				Beginning of entire string
\z				End of entire string
\Z				End of entire string except allowable final line terminator.
re*				Matches 0 or more occurrences of preceding expression.
re+				Matches 1 or more of the previous thing
re?				Matches 0 or 1 occurrence of preceding expression.
re{ n}			Matches exactly n number of occurrences of preceding expression.
re{ n,}			Matches n or more occurrences of preceding expression.
re{ n, m}		Matches at least n and at most m occurrences of preceding expression.
a| b			Matches either a or b.
(re)			Groups regular expressions and remembers matched text.
(?: re)			Groups regular expressions without remembering matched text.
(?> re)			Matches independent pattern without backtracking.
\w				Matches word characters.
\W				Matches nonword characters.
\s				Matches whitespace. Equivalent to [\t\n\r\f].
\S				Matches nonwhitespace.
\d				Matches digits. Equivalent to [0-9].
\D				Matches nondigits.
\A				Matches beginning of string.
\Z				Matches end of string. If a newline exists, it matches just before newline.
\z				Matches end of string.
\G				Matches point where last match finished.
\n				Back-reference to capture group number "n"
\b				Matches word boundaries when outside brackets. Matches backspace (0x08) when inside brackets.
\B				Matches nonword boundaries.
\n, \t, etc.	Matches newlines, carriage returns, tabs, etc.
\Q				Escape (quote) all characters up to \E
\E				Ends quoting begun with \Q




?				Matches the preceding element zero or one time. For example, ab?c matches only "ac" or "abc".
+				Matches the preceding element one or more times. For example, ab+c matches "abc", "abbc", "abbbc", and so on, but not "ac".
|				The choice (also known as alternation or set union) operator matches either the expression before or the expression after the operator. For example, abc|def matches "abc" or "def".




** POSIX **


POSIX		Non-standard		Perl/Tcl		Vim				ASCII							Description
[:alnum:]													[A-Za-z0-9]						Alphanumeric characters
			[:word:]				\w			\w			[A-Za-z0-9_]					Alphanumeric characters plus "_"
									\W			\W			[^A-Za-z0-9_]					Non-word characters
[:alpha:]										\a			[A-Za-z]						Alphabetic characters
[:blank:]										\s				[ \t]						Space and tab
									\b			\< \>	(?<=\W)(?=\w)|(?<=\w)(?=\W)			Word boundaries
[:cntrl:]													[\x00-\x1F\x7F]					Control characters
[:digit:]							\d			\d				[0-9]						Digits
									\D			\D				[^0-9]						Non-digits
[:graph:]													[\x21-\x7E]						Visible characters
[:lower:]										\l				[a-z]						Lowercase letters
[:print:]										\p				[\x20-\x7E]					Visible characters and the space character
[:punct:]												[][!"#$%&'()*+,./:;<=>?@\^_`{|}~-]	Punctuation characters
[:space:]							\s			\_s			[ \t\r\n\v\f]					Whitespace characters
									\S			\S			[^ \t\r\n\v\f]					Non-whitespace characters
[:upper:]										\u				[A-Z]						Uppercase letters
[:xdigit:]										\x			[A-Fa-f0-9]						Hexadecimal digits













